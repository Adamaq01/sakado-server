schema {
    query: Query,
    mutation: Mutation
}

type Query {
    user: User
    links: [Link!]!
}

type Mutation {
    user: MutableUser
}

type Link {
    name: String!
    link: String!
}

type User {
    username: String!
    name: String!
    studentClass: String!
    avatar: String

    timetable: [Week!]!
    homeworks: [Homework!]!
    lastMarks: [Mark!]!
    averages: Averages

    nextLesson: Lesson!
    away: [Week!]!
    isLong(homework: String!): Boolean!
}

type MutableUser {
    homework(id: String): MutableHomework
}

type Week {
    id: String!

    from: Long!
    to: Long!
    content: [Lesson!]!
}

type Lesson {
    id: String!

    name: String!
    teacher: String!
    room: String

    from: Long!
    to: Long!

    away: Boolean!
}

type Homework {
    id: String!

    subject: String!
    content: String!
    time: Long!
    long: Boolean!
}

type MutableHomework {
    id: String!
    long(long: Boolean!): Boolean!
}

type Mark {
    id: String!

    subject: String!
    mark: String!
    time: Long!
}

type Averages {
    student: Float!,
    studentClass: Float!
}